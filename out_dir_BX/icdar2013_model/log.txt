[11/30 12:52:33] detectron2 INFO: Rank of current process: 0. World size: 1
[11/30 12:52:33] detectron2 INFO: Environment info:
------------------------  ------------------------------------------------------------------------------
sys.platform              linux
Python                    3.7.3 | packaged by conda-forge | (default, Dec  6 2019, 08:54:18) [GCC 7.3.0]
Numpy                     1.21.3
Detectron2 Compiler       GCC 7.5
Detectron2 CUDA Compiler  10.1
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.3.1
PyTorch Debug Build       False
torchvision               0.4.2
CUDA available            True
GPU 0                     Tesla M60
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    8.3.2
cv2                       4.5.4-dev
------------------------  ------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[11/30 12:52:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/ocr/icdar2013_BX_FPN.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=True)
[11/30 12:52:33] detectron2 INFO: Contents of args.config_file=configs/ocr/icdar2013_BX_FPN.yaml:
_BASE_: "./Base-RCNN-FPN.yaml"
MODEL:
  MASK_ON: True
  TEXTFUSENET_MUTIL_PATH_FUSE_ON: True
  WEIGHTS: "/home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/model_ic13_r101.pth"
  PIXEL_STD: [57.375, 57.120, 58.395]
  ROI_HEADS:
    NMS_THRESH_TEST: 0.3
  TEXTFUSENET_SEG_HEAD:
    FPN_FEATURES_FUSED_LEVEL: 2
    POOLER_SCALES: (0.0625,)
DATASETS:
  TRAIN: ("icdar2013",)
  TEST: ("icdar2013",)
SOLVER:
  IMS_PER_BATCH: 1
  BASE_LR: 0.001
  STEPS: (40000,80000,)
  MAX_ITER: 120000
  CHECKPOINT_PERIOD: 2500

INPUT:
  MIN_SIZE_TRAIN: (800,1000,1200)
  MAX_SIZE_TRAIN: 1500
  MIN_SIZE_TEST: 800
  MAX_SIZE_TEST: 1500
  
  
OUTPUT_DIR: "/home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/"

[11/30 12:52:33] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('icdar2013',)
  TRAIN: ('icdar2013',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1500
  MAX_SIZE_TRAIN: 1500
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800, 1000, 1200)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_efficientnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['eff3', 'eff4', 'eff6', 'eff9']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [57.375, 57.12, 58.395]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['eff3', 'eff4', 'eff6', 'eff9']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.3
    NUM_CLASSES: 63
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  TEXTFUSENET_MUTIL_PATH_FUSE_ON: True
  TEXTFUSENET_SEG_HEAD:
    CHANNELS: 256
    FPN_FEATURES_FUSED_LEVEL: 2
    NUM_CLASSES: 2
    NUM_CONV3: 4
    NUM_FPN_FEATURES: 4
    POOLER_RESOLUTION: 14
    POOLER_SCALES: (0.0625,)
    POOLER_TYPE: ROIAlignV2
    SAMPLING_RATIO: 2
  WEIGHTS: /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/model_ic13_r101.pth
OUTPUT_DIR: /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/
SEED: -1
SOLVER:
  BASE_LR: 0.001
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 1
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 120000
  MOMENTUM: 0.9
  STEPS: (40000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
[11/30 12:52:33] detectron2 INFO: Full config saved to /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/config.yaml
[11/30 12:52:33] d2.utils.env INFO: Using a generated random seed 33475994
[11/30 12:52:35] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(48, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(144, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(1632, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): EfficientNet(
      (_conv_stem): Conv2dStaticSamePadding(
        3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False
        (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      )
      (_bn0): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      (eff2): Sequential(
        (0): MBConvBlock(
          (_depthwise_conv): Conv2dStaticSamePadding(
            40, 40, kernel_size=(3, 3), stride=[1, 1], groups=40, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            40, 10, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            10, 40, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_depthwise_conv): Conv2dStaticSamePadding(
            24, 24, kernel_size=(3, 3), stride=(1, 1), groups=24, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            24, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 24, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff3): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            144, 144, kernel_size=(3, 3), stride=[2, 2], groups=144, bias=False
            (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            144, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 144, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff4): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(5, 5), stride=[2, 2], groups=192, bias=False
            (static_padding): ZeroPad2d(padding=(1, 2, 1, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            288, 288, kernel_size=(5, 5), stride=(1, 1), groups=288, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            288, 12, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            12, 288, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            288, 288, kernel_size=(5, 5), stride=(1, 1), groups=288, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            288, 12, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            12, 288, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff5): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            288, 288, kernel_size=(3, 3), stride=[2, 2], groups=288, bias=False
            (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            288, 12, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            12, 288, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            288, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (4): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff6): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(5, 5), stride=[1, 1], groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (4): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff7): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=[2, 2], groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(1, 2, 1, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (4): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (5): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff8): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(3, 3), stride=[1, 1], groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 408, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(408, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            408, 2448, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(2448, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            2448, 2448, kernel_size=(3, 3), stride=(1, 1), groups=2448, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(2448, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            2448, 102, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            102, 2448, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            2448, 408, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(408, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff9): Sequential(
        (0): Conv2dStaticSamePadding(
          408, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False
          (static_padding): Identity()
        )
        (1): BatchNorm2d(1632, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      )
      (_swish): MemoryEfficientSwish()
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=2, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=2, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=2, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=64, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=252, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=2, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=2, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=2, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 63, kernel_size=(1, 1), stride=(1, 1))
    )
    (seg_head): Segmentation_head(
      (conv1x1_list): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
        (2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
        (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (conv3x3_list): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (seg_pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        )
      )
      (conv3x3_list_roi): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (conv1x1_seg_logits): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (seg_logits): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
      (relu): ReLU(inplace=True)
    )
    (mutil_path_fuse_module): Mutil_Path_Fuse_Module(
      (char_conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (char_conv1x1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (text_conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (text_conv1x1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv1x1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
  )
)
[11/30 12:52:35] d2.data.datasets.coco INFO: Loaded 229 images in COCO format from /home/ubuntu/EfficientNet/datasets/icdar2013/train.json
[11/30 12:52:35] d2.data.build INFO: Removed 0 images with no usable annotations. 229 images left.
[11/30 12:52:35] d2.data.build INFO: Distribution of training instances among all 63 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    text    | 849          |     0      | 37           |     1      | 36           |
|     2      | 42           |     3      | 14           |     4      | 22           |
|     5      | 13           |     6      | 8            |     7      | 8            |
|     8      | 11           |     9      | 3            |     A      | 178          |
|     B      | 42           |     C      | 119          |     D      | 85           |
|     E      | 257          |     F      | 57           |     G      | 68           |
|     H      | 67           |     I      | 127          |     J      | 14           |
|     K      | 24           |     L      | 142          |     M      | 69           |
|     N      | 127          |     O      | 163          |     P      | 71           |
|     Q      | 0            |     R      | 178          |     S      | 189          |
|     T      | 142          |     U      | 50           |     V      | 29           |
|     W      | 36           |     X      | 14           |     Y      | 34           |
|     Z      | 4            |     a      | 199          |     b      | 26           |
|     c      | 74           |     d      | 69           |     e      | 286          |
|     f      | 48           |     g      | 41           |     h      | 67           |
|     i      | 168          |     j      | 4            |     k      | 25           |
|     l      | 100          |     m      | 51           |     n      | 185          |
|     o      | 179          |     p      | 35           |     q      | 3            |
|     r      | 158          |     s      | 155          |     t      | 155          |
|     u      | 67           |     v      | 21           |     w      | 33           |
|     x      | 9            |     y      | 43           |     z      | 1            |
|            |              |            |              |            |              |
|   total    | 5531         |            |              |            |              |[0m
[11/30 12:52:35] d2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(800, 1000, 1200), max_size=1500, sample_style='choice'), RandomFlip(), RandomContrast(intensity_min=0.5, intensity_max=1.5), RandomBrightness(intensity_min=0.5, intensity_max=1.5), RandomSaturation(intensity_min=0.5, intensity_max=1.5), RandomLighting(scale=1.2462023683921668)]
[11/30 12:52:35] d2.data.build INFO: Using training sampler TrainingSampler
[11/30 12:52:35] fvcore.common.checkpoint INFO: Loading checkpoint from /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/model_ic13_r101.pth
[11/30 12:52:36] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral2.weight' has shape (256, 256, 1, 1) in the checkpoint but (256, 32, 1, 1) in the model! Skipped.
[11/30 12:52:36] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral3.weight' has shape (256, 512, 1, 1) in the checkpoint but (256, 48, 1, 1) in the model! Skipped.
[11/30 12:52:36] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral4.weight' has shape (256, 1024, 1, 1) in the checkpoint but (256, 144, 1, 1) in the model! Skipped.
[11/30 12:52:36] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral5.weight' has shape (256, 2048, 1, 1) in the checkpoint but (256, 1632, 1, 1) in the model! Skipped.
[11/30 12:52:36] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mbackbone.fpn_lateral2.weight[0m
  [34mbackbone.fpn_lateral3.weight[0m
  [34mbackbone.fpn_lateral4.weight[0m
  [34mbackbone.fpn_lateral5.weight[0m
  [34mbackbone.bottom_up._conv_stem.weight[0m
  [34mbackbone.bottom_up._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff2.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff2.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff2.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff2.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff3.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff3.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff3.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff3.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff3.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff3.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff3.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff3.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff3.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff4.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff4.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff4.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff4.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff4.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff4.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff4.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff4.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff4.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.3._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.3._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.3._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.3._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.3._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.3._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.3._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.3._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.4._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.4._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.4._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.4._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.4._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.4._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.4._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.4._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.3._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.3._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.3._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.3._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.3._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.3._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.3._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.3._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.4._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.4._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.4._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.4._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.4._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.4._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.4._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.4._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.3._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.3._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.3._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.3._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.3._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.3._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.3._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.3._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.4._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.4._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.4._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.4._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.4._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.4._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.4._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.4._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.5._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.5._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.5._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.5._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.5._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.5._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.5._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.5._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff8.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff8.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff8.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff8.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff8.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff8.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff9.0.weight[0m
  [34mbackbone.bottom_up.eff9.1.{weight, bias, running_mean, running_var}[0m
[11/30 12:52:36] fvcore.common.checkpoint INFO: The checkpoint contains parameters not used by the model:
  [35mbackbone.bottom_up.stem.conv1.weight[0m
  [35mbackbone.bottom_up.stem.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res2.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.conv1.weight[0m
  [35mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.conv2.weight[0m
  [35mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.conv3.weight[0m
  [35mbackbone.bottom_up.res2.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.1.conv1.weight[0m
  [35mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.1.conv2.weight[0m
  [35mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.1.conv3.weight[0m
  [35mbackbone.bottom_up.res2.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.2.conv1.weight[0m
  [35mbackbone.bottom_up.res2.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.2.conv2.weight[0m
  [35mbackbone.bottom_up.res2.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.2.conv3.weight[0m
  [35mbackbone.bottom_up.res2.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.conv1.weight[0m
  [35mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.conv2.weight[0m
  [35mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.conv3.weight[0m
  [35mbackbone.bottom_up.res3.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.1.conv1.weight[0m
  [35mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.1.conv2.weight[0m
  [35mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.1.conv3.weight[0m
  [35mbackbone.bottom_up.res3.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.2.conv1.weight[0m
  [35mbackbone.bottom_up.res3.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.2.conv2.weight[0m
  [35mbackbone.bottom_up.res3.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.2.conv3.weight[0m
  [35mbackbone.bottom_up.res3.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.3.conv1.weight[0m
  [35mbackbone.bottom_up.res3.3.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.3.conv2.weight[0m
  [35mbackbone.bottom_up.res3.3.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.3.conv3.weight[0m
  [35mbackbone.bottom_up.res3.3.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.conv1.weight[0m
  [35mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.conv2.weight[0m
  [35mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.conv3.weight[0m
  [35mbackbone.bottom_up.res4.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.1.conv1.weight[0m
  [35mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.1.conv2.weight[0m
  [35mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.1.conv3.weight[0m
  [35mbackbone.bottom_up.res4.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.2.conv1.weight[0m
  [35mbackbone.bottom_up.res4.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.2.conv2.weight[0m
  [35mbackbone.bottom_up.res4.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.2.conv3.weight[0m
  [35mbackbone.bottom_up.res4.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.3.conv1.weight[0m
  [35mbackbone.bottom_up.res4.3.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.3.conv2.weight[0m
  [35mbackbone.bottom_up.res4.3.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.3.conv3.weight[0m
  [35mbackbone.bottom_up.res4.3.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.4.conv1.weight[0m
  [35mbackbone.bottom_up.res4.4.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.4.conv2.weight[0m
  [35mbackbone.bottom_up.res4.4.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.4.conv3.weight[0m
  [35mbackbone.bottom_up.res4.4.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.5.conv1.weight[0m
  [35mbackbone.bottom_up.res4.5.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.5.conv2.weight[0m
  [35mbackbone.bottom_up.res4.5.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.5.conv3.weight[0m
  [35mbackbone.bottom_up.res4.5.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.6.conv1.weight[0m
  [35mbackbone.bottom_up.res4.6.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.6.conv2.weight[0m
  [35mbackbone.bottom_up.res4.6.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.6.conv3.weight[0m
  [35mbackbone.bottom_up.res4.6.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.7.conv1.weight[0m
  [35mbackbone.bottom_up.res4.7.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.7.conv2.weight[0m
  [35mbackbone.bottom_up.res4.7.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.7.conv3.weight[0m
  [35mbackbone.bottom_up.res4.7.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.8.conv1.weight[0m
  [35mbackbone.bottom_up.res4.8.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.8.conv2.weight[0m
  [35mbackbone.bottom_up.res4.8.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.8.conv3.weight[0m
  [35mbackbone.bottom_up.res4.8.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.9.conv1.weight[0m
  [35mbackbone.bottom_up.res4.9.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.9.conv2.weight[0m
  [35mbackbone.bottom_up.res4.9.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.9.conv3.weight[0m
  [35mbackbone.bottom_up.res4.9.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.10.conv1.weight[0m
  [35mbackbone.bottom_up.res4.10.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.10.conv2.weight[0m
  [35mbackbone.bottom_up.res4.10.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.10.conv3.weight[0m
  [35mbackbone.bottom_up.res4.10.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.11.conv1.weight[0m
  [35mbackbone.bottom_up.res4.11.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.11.conv2.weight[0m
  [35mbackbone.bottom_up.res4.11.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.11.conv3.weight[0m
  [35mbackbone.bottom_up.res4.11.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.12.conv1.weight[0m
  [35mbackbone.bottom_up.res4.12.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.12.conv2.weight[0m
  [35mbackbone.bottom_up.res4.12.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.12.conv3.weight[0m
  [35mbackbone.bottom_up.res4.12.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.13.conv1.weight[0m
  [35mbackbone.bottom_up.res4.13.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.13.conv2.weight[0m
  [35mbackbone.bottom_up.res4.13.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.13.conv3.weight[0m
  [35mbackbone.bottom_up.res4.13.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.14.conv1.weight[0m
  [35mbackbone.bottom_up.res4.14.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.14.conv2.weight[0m
  [35mbackbone.bottom_up.res4.14.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.14.conv3.weight[0m
  [35mbackbone.bottom_up.res4.14.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.15.conv1.weight[0m
  [35mbackbone.bottom_up.res4.15.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.15.conv2.weight[0m
  [35mbackbone.bottom_up.res4.15.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.15.conv3.weight[0m
  [35mbackbone.bottom_up.res4.15.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.16.conv1.weight[0m
  [35mbackbone.bottom_up.res4.16.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.16.conv2.weight[0m
  [35mbackbone.bottom_up.res4.16.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.16.conv3.weight[0m
  [35mbackbone.bottom_up.res4.16.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.17.conv1.weight[0m
  [35mbackbone.bottom_up.res4.17.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.17.conv2.weight[0m
  [35mbackbone.bottom_up.res4.17.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.17.conv3.weight[0m
  [35mbackbone.bottom_up.res4.17.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.18.conv1.weight[0m
  [35mbackbone.bottom_up.res4.18.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.18.conv2.weight[0m
  [35mbackbone.bottom_up.res4.18.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.18.conv3.weight[0m
  [35mbackbone.bottom_up.res4.18.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.19.conv1.weight[0m
  [35mbackbone.bottom_up.res4.19.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.19.conv2.weight[0m
  [35mbackbone.bottom_up.res4.19.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.19.conv3.weight[0m
  [35mbackbone.bottom_up.res4.19.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.20.conv1.weight[0m
  [35mbackbone.bottom_up.res4.20.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.20.conv2.weight[0m
  [35mbackbone.bottom_up.res4.20.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.20.conv3.weight[0m
  [35mbackbone.bottom_up.res4.20.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.21.conv1.weight[0m
  [35mbackbone.bottom_up.res4.21.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.21.conv2.weight[0m
  [35mbackbone.bottom_up.res4.21.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.21.conv3.weight[0m
  [35mbackbone.bottom_up.res4.21.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.22.conv1.weight[0m
  [35mbackbone.bottom_up.res4.22.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.22.conv2.weight[0m
  [35mbackbone.bottom_up.res4.22.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.22.conv3.weight[0m
  [35mbackbone.bottom_up.res4.22.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.conv1.weight[0m
  [35mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.conv2.weight[0m
  [35mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.conv3.weight[0m
  [35mbackbone.bottom_up.res5.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.1.conv1.weight[0m
  [35mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.1.conv2.weight[0m
  [35mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.1.conv3.weight[0m
  [35mbackbone.bottom_up.res5.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.2.conv1.weight[0m
  [35mbackbone.bottom_up.res5.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.2.conv2.weight[0m
  [35mbackbone.bottom_up.res5.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.2.conv3.weight[0m
  [35mbackbone.bottom_up.res5.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
[11/30 12:52:36] d2.engine.train_loop INFO: Starting training from iteration 0
[11/30 12:52:37] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[11/30 12:55:59] detectron2 INFO: Rank of current process: 0. World size: 1
[11/30 12:55:59] detectron2 INFO: Environment info:
------------------------  ------------------------------------------------------------------------------
sys.platform              linux
Python                    3.7.3 | packaged by conda-forge | (default, Dec  6 2019, 08:54:18) [GCC 7.3.0]
Numpy                     1.21.3
Detectron2 Compiler       GCC 7.5
Detectron2 CUDA Compiler  10.1
DETECTRON2_ENV_MODULE     <not set>
PyTorch                   1.3.1
PyTorch Debug Build       False
torchvision               0.4.2
CUDA available            True
GPU 0                     Tesla M60
CUDA_HOME                 /usr/local/cuda
NVCC                      Cuda compilation tools, release 10.1, V10.1.243
Pillow                    8.3.2
cv2                       4.5.4-dev
------------------------  ------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[11/30 12:55:59] detectron2 INFO: Command line arguments: Namespace(config_file='configs/ocr/icdar2013_BX_FPN.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=True)
[11/30 12:55:59] detectron2 INFO: Contents of args.config_file=configs/ocr/icdar2013_BX_FPN.yaml:
_BASE_: "./Base-RCNN-FPN.yaml"
MODEL:
  MASK_ON: True
  TEXTFUSENET_MUTIL_PATH_FUSE_ON: True
  WEIGHTS: "/home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/model_ic13_r101.pth"
  PIXEL_STD: [57.375, 57.120, 58.395]
  ROI_HEADS:
    NMS_THRESH_TEST: 0.3
  TEXTFUSENET_SEG_HEAD:
    FPN_FEATURES_FUSED_LEVEL: 2
    POOLER_SCALES: (0.0625,)
DATASETS:
  TRAIN: ("icdar2013",)
  TEST: ("icdar2013",)
SOLVER:
  IMS_PER_BATCH: 1
  BASE_LR: 0.001
  STEPS: (40000,80000,)
  MAX_ITER: 120000
  CHECKPOINT_PERIOD: 2500

INPUT:
  MIN_SIZE_TRAIN: (800,1000,1200)
  MAX_SIZE_TRAIN: 1500
  MIN_SIZE_TEST: 800
  MAX_SIZE_TEST: 1500
  
  
OUTPUT_DIR: "/home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/"

[11/30 12:55:59] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('icdar2013',)
  TRAIN: ('icdar2013',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1500
  MAX_SIZE_TRAIN: 1500
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800, 1000, 1200)
  MIN_SIZE_TRAIN_SAMPLING: choice
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_efficientnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['eff3', 'eff4', 'eff6', 'eff9']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [57.375, 57.12, 58.395]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['eff3', 'eff4', 'eff6', 'eff9']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.3
    NUM_CLASSES: 63
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  TEXTFUSENET_MUTIL_PATH_FUSE_ON: True
  TEXTFUSENET_SEG_HEAD:
    CHANNELS: 256
    FPN_FEATURES_FUSED_LEVEL: 2
    NUM_CLASSES: 2
    NUM_CONV3: 4
    NUM_FPN_FEATURES: 4
    POOLER_RESOLUTION: 14
    POOLER_SCALES: (0.0625,)
    POOLER_TYPE: ROIAlignV2
    SAMPLING_RATIO: 2
  WEIGHTS: /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/model_ic13_r101.pth
OUTPUT_DIR: /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/
SEED: -1
SOLVER:
  BASE_LR: 0.001
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 1
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 120000
  MOMENTUM: 0.9
  STEPS: (40000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
[11/30 12:55:59] detectron2 INFO: Full config saved to /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/config.yaml
[11/30 12:55:59] d2.utils.env INFO: Using a generated random seed 59784972
[11/30 12:56:03] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(48, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(144, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(1632, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): EfficientNet(
      (_conv_stem): Conv2dStaticSamePadding(
        3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False
        (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      )
      (_bn0): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      (eff2): Sequential(
        (0): MBConvBlock(
          (_depthwise_conv): Conv2dStaticSamePadding(
            40, 40, kernel_size=(3, 3), stride=[1, 1], groups=40, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            40, 10, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            10, 40, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_depthwise_conv): Conv2dStaticSamePadding(
            24, 24, kernel_size=(3, 3), stride=(1, 1), groups=24, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            24, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 24, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff3): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            144, 144, kernel_size=(3, 3), stride=[2, 2], groups=144, bias=False
            (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            144, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 144, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(3, 3), stride=(1, 1), groups=192, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff4): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            192, 192, kernel_size=(5, 5), stride=[2, 2], groups=192, bias=False
            (static_padding): ZeroPad2d(padding=(1, 2, 1, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            192, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 192, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            288, 288, kernel_size=(5, 5), stride=(1, 1), groups=288, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            288, 12, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            12, 288, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            288, 288, kernel_size=(5, 5), stride=(1, 1), groups=288, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            288, 12, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            12, 288, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(48, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff5): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            288, 288, kernel_size=(3, 3), stride=[2, 2], groups=288, bias=False
            (static_padding): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(288, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            288, 12, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            12, 288, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            288, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (4): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(3, 3), stride=(1, 1), groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 104, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(104, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff6): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            624, 624, kernel_size=(5, 5), stride=[1, 1], groups=624, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(624, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            624, 26, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            26, 624, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            624, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (4): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=(1, 1), groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff7): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            864, 864, kernel_size=(5, 5), stride=[2, 2], groups=864, bias=False
            (static_padding): ZeroPad2d(padding=(1, 2, 1, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(864, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            864, 36, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            36, 864, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            864, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (4): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (5): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(5, 5), stride=(1, 1), groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(2, 2, 2, 2), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 248, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(248, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff8): Sequential(
        (0): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            248, 1488, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            1488, 1488, kernel_size=(3, 3), stride=[1, 1], groups=1488, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(1488, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1488, 62, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            62, 1488, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            1488, 408, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(408, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dStaticSamePadding(
            408, 2448, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn0): BatchNorm2d(2448, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dStaticSamePadding(
            2448, 2448, kernel_size=(3, 3), stride=(1, 1), groups=2448, bias=False
            (static_padding): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          )
          (_bn1): BatchNorm2d(2448, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            2448, 102, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            102, 2448, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dStaticSamePadding(
            2448, 408, kernel_size=(1, 1), stride=(1, 1), bias=False
            (static_padding): Identity()
          )
          (_bn2): BatchNorm2d(408, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (eff9): Sequential(
        (0): Conv2dStaticSamePadding(
          408, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False
          (static_padding): Identity()
        )
        (1): BatchNorm2d(1632, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      )
      (_swish): MemoryEfficientSwish()
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=2, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=2, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=2, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=64, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=252, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=2, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=2, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=2, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 63, kernel_size=(1, 1), stride=(1, 1))
    )
    (seg_head): Segmentation_head(
      (conv1x1_list): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
        (2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
        (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (conv3x3_list): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (seg_pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=2, aligned=True)
        )
      )
      (conv3x3_list_roi): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (conv1x1_seg_logits): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (seg_logits): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
      (relu): ReLU(inplace=True)
    )
    (mutil_path_fuse_module): Mutil_Path_Fuse_Module(
      (char_conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (char_conv1x1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (text_conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (text_conv1x1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (conv3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv1x1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
    )
  )
)
[11/30 12:56:03] d2.data.datasets.coco INFO: Loaded 229 images in COCO format from /home/ubuntu/EfficientNet/datasets/icdar2013/train.json
[11/30 12:56:04] d2.data.build INFO: Removed 0 images with no usable annotations. 229 images left.
[11/30 12:56:04] d2.data.build INFO: Distribution of training instances among all 63 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    text    | 849          |     0      | 37           |     1      | 36           |
|     2      | 42           |     3      | 14           |     4      | 22           |
|     5      | 13           |     6      | 8            |     7      | 8            |
|     8      | 11           |     9      | 3            |     A      | 178          |
|     B      | 42           |     C      | 119          |     D      | 85           |
|     E      | 257          |     F      | 57           |     G      | 68           |
|     H      | 67           |     I      | 127          |     J      | 14           |
|     K      | 24           |     L      | 142          |     M      | 69           |
|     N      | 127          |     O      | 163          |     P      | 71           |
|     Q      | 0            |     R      | 178          |     S      | 189          |
|     T      | 142          |     U      | 50           |     V      | 29           |
|     W      | 36           |     X      | 14           |     Y      | 34           |
|     Z      | 4            |     a      | 199          |     b      | 26           |
|     c      | 74           |     d      | 69           |     e      | 286          |
|     f      | 48           |     g      | 41           |     h      | 67           |
|     i      | 168          |     j      | 4            |     k      | 25           |
|     l      | 100          |     m      | 51           |     n      | 185          |
|     o      | 179          |     p      | 35           |     q      | 3            |
|     r      | 158          |     s      | 155          |     t      | 155          |
|     u      | 67           |     v      | 21           |     w      | 33           |
|     x      | 9            |     y      | 43           |     z      | 1            |
|            |              |            |              |            |              |
|   total    | 5531         |            |              |            |              |[0m
[11/30 12:56:04] d2.data.detection_utils INFO: TransformGens used in training: [ResizeShortestEdge(short_edge_length=(800, 1000, 1200), max_size=1500, sample_style='choice'), RandomFlip(), RandomContrast(intensity_min=0.5, intensity_max=1.5), RandomBrightness(intensity_min=0.5, intensity_max=1.5), RandomSaturation(intensity_min=0.5, intensity_max=1.5), RandomLighting(scale=0.7618106308774544)]
[11/30 12:56:04] d2.data.build INFO: Using training sampler TrainingSampler
[11/30 12:56:04] fvcore.common.checkpoint INFO: Loading checkpoint from /home/ubuntu/EfficientNet/out_dir_BX/icdar2013_model/model_ic13_r101.pth
[11/30 12:56:06] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral2.weight' has shape (256, 256, 1, 1) in the checkpoint but (256, 32, 1, 1) in the model! Skipped.
[11/30 12:56:06] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral3.weight' has shape (256, 512, 1, 1) in the checkpoint but (256, 48, 1, 1) in the model! Skipped.
[11/30 12:56:06] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral4.weight' has shape (256, 1024, 1, 1) in the checkpoint but (256, 144, 1, 1) in the model! Skipped.
[11/30 12:56:06] fvcore.common.checkpoint WARNING: 'backbone.fpn_lateral5.weight' has shape (256, 2048, 1, 1) in the checkpoint but (256, 1632, 1, 1) in the model! Skipped.
[11/30 12:56:06] fvcore.common.checkpoint INFO: Some model parameters are not in the checkpoint:
  [34mbackbone.fpn_lateral2.weight[0m
  [34mbackbone.fpn_lateral3.weight[0m
  [34mbackbone.fpn_lateral4.weight[0m
  [34mbackbone.fpn_lateral5.weight[0m
  [34mbackbone.bottom_up._conv_stem.weight[0m
  [34mbackbone.bottom_up._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff2.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff2.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff2.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff2.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff2.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff2.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff3.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff3.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff3.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff3.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff3.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff3.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff3.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff3.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff3.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff3.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff3.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff4.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff4.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff4.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff4.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff4.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff4.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff4.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff4.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff4.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff4.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff4.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.3._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.3._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.3._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.3._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.3._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.3._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.3._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.3._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.4._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff5.4._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.4._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff5.4._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff5.4._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.4._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff5.4._project_conv.weight[0m
  [34mbackbone.bottom_up.eff5.4._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.3._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.3._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.3._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.3._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.3._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.3._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.3._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.3._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.4._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff6.4._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.4._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff6.4._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff6.4._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.4._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff6.4._project_conv.weight[0m
  [34mbackbone.bottom_up.eff6.4._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.2._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.2._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.2._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.2._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.2._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.2._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.2._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.2._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.3._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.3._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.3._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.3._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.3._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.3._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.3._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.3._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.4._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.4._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.4._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.4._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.4._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.4._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.4._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.4._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.5._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff7.5._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.5._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff7.5._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff7.5._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.5._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff7.5._project_conv.weight[0m
  [34mbackbone.bottom_up.eff7.5._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.0._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff8.0._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.0._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff8.0._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.0._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.0._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.0._project_conv.weight[0m
  [34mbackbone.bottom_up.eff8.0._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.1._expand_conv.weight[0m
  [34mbackbone.bottom_up.eff8.1._bn0.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.1._depthwise_conv.weight[0m
  [34mbackbone.bottom_up.eff8.1._bn1.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff8.1._se_reduce.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.1._se_expand.{weight, bias}[0m
  [34mbackbone.bottom_up.eff8.1._project_conv.weight[0m
  [34mbackbone.bottom_up.eff8.1._bn2.{weight, bias, running_mean, running_var}[0m
  [34mbackbone.bottom_up.eff9.0.weight[0m
  [34mbackbone.bottom_up.eff9.1.{weight, bias, running_mean, running_var}[0m
[11/30 12:56:06] fvcore.common.checkpoint INFO: The checkpoint contains parameters not used by the model:
  [35mbackbone.bottom_up.stem.conv1.weight[0m
  [35mbackbone.bottom_up.stem.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res2.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.conv1.weight[0m
  [35mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.conv2.weight[0m
  [35mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.0.conv3.weight[0m
  [35mbackbone.bottom_up.res2.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.1.conv1.weight[0m
  [35mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.1.conv2.weight[0m
  [35mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.1.conv3.weight[0m
  [35mbackbone.bottom_up.res2.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.2.conv1.weight[0m
  [35mbackbone.bottom_up.res2.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.2.conv2.weight[0m
  [35mbackbone.bottom_up.res2.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res2.2.conv3.weight[0m
  [35mbackbone.bottom_up.res2.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.conv1.weight[0m
  [35mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.conv2.weight[0m
  [35mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.0.conv3.weight[0m
  [35mbackbone.bottom_up.res3.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.1.conv1.weight[0m
  [35mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.1.conv2.weight[0m
  [35mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.1.conv3.weight[0m
  [35mbackbone.bottom_up.res3.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.2.conv1.weight[0m
  [35mbackbone.bottom_up.res3.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.2.conv2.weight[0m
  [35mbackbone.bottom_up.res3.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.2.conv3.weight[0m
  [35mbackbone.bottom_up.res3.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.3.conv1.weight[0m
  [35mbackbone.bottom_up.res3.3.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.3.conv2.weight[0m
  [35mbackbone.bottom_up.res3.3.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res3.3.conv3.weight[0m
  [35mbackbone.bottom_up.res3.3.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.conv1.weight[0m
  [35mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.conv2.weight[0m
  [35mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.0.conv3.weight[0m
  [35mbackbone.bottom_up.res4.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.1.conv1.weight[0m
  [35mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.1.conv2.weight[0m
  [35mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.1.conv3.weight[0m
  [35mbackbone.bottom_up.res4.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.2.conv1.weight[0m
  [35mbackbone.bottom_up.res4.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.2.conv2.weight[0m
  [35mbackbone.bottom_up.res4.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.2.conv3.weight[0m
  [35mbackbone.bottom_up.res4.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.3.conv1.weight[0m
  [35mbackbone.bottom_up.res4.3.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.3.conv2.weight[0m
  [35mbackbone.bottom_up.res4.3.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.3.conv3.weight[0m
  [35mbackbone.bottom_up.res4.3.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.4.conv1.weight[0m
  [35mbackbone.bottom_up.res4.4.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.4.conv2.weight[0m
  [35mbackbone.bottom_up.res4.4.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.4.conv3.weight[0m
  [35mbackbone.bottom_up.res4.4.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.5.conv1.weight[0m
  [35mbackbone.bottom_up.res4.5.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.5.conv2.weight[0m
  [35mbackbone.bottom_up.res4.5.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.5.conv3.weight[0m
  [35mbackbone.bottom_up.res4.5.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.6.conv1.weight[0m
  [35mbackbone.bottom_up.res4.6.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.6.conv2.weight[0m
  [35mbackbone.bottom_up.res4.6.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.6.conv3.weight[0m
  [35mbackbone.bottom_up.res4.6.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.7.conv1.weight[0m
  [35mbackbone.bottom_up.res4.7.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.7.conv2.weight[0m
  [35mbackbone.bottom_up.res4.7.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.7.conv3.weight[0m
  [35mbackbone.bottom_up.res4.7.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.8.conv1.weight[0m
  [35mbackbone.bottom_up.res4.8.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.8.conv2.weight[0m
  [35mbackbone.bottom_up.res4.8.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.8.conv3.weight[0m
  [35mbackbone.bottom_up.res4.8.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.9.conv1.weight[0m
  [35mbackbone.bottom_up.res4.9.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.9.conv2.weight[0m
  [35mbackbone.bottom_up.res4.9.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.9.conv3.weight[0m
  [35mbackbone.bottom_up.res4.9.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.10.conv1.weight[0m
  [35mbackbone.bottom_up.res4.10.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.10.conv2.weight[0m
  [35mbackbone.bottom_up.res4.10.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.10.conv3.weight[0m
  [35mbackbone.bottom_up.res4.10.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.11.conv1.weight[0m
  [35mbackbone.bottom_up.res4.11.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.11.conv2.weight[0m
  [35mbackbone.bottom_up.res4.11.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.11.conv3.weight[0m
  [35mbackbone.bottom_up.res4.11.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.12.conv1.weight[0m
  [35mbackbone.bottom_up.res4.12.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.12.conv2.weight[0m
  [35mbackbone.bottom_up.res4.12.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.12.conv3.weight[0m
  [35mbackbone.bottom_up.res4.12.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.13.conv1.weight[0m
  [35mbackbone.bottom_up.res4.13.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.13.conv2.weight[0m
  [35mbackbone.bottom_up.res4.13.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.13.conv3.weight[0m
  [35mbackbone.bottom_up.res4.13.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.14.conv1.weight[0m
  [35mbackbone.bottom_up.res4.14.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.14.conv2.weight[0m
  [35mbackbone.bottom_up.res4.14.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.14.conv3.weight[0m
  [35mbackbone.bottom_up.res4.14.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.15.conv1.weight[0m
  [35mbackbone.bottom_up.res4.15.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.15.conv2.weight[0m
  [35mbackbone.bottom_up.res4.15.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.15.conv3.weight[0m
  [35mbackbone.bottom_up.res4.15.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.16.conv1.weight[0m
  [35mbackbone.bottom_up.res4.16.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.16.conv2.weight[0m
  [35mbackbone.bottom_up.res4.16.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.16.conv3.weight[0m
  [35mbackbone.bottom_up.res4.16.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.17.conv1.weight[0m
  [35mbackbone.bottom_up.res4.17.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.17.conv2.weight[0m
  [35mbackbone.bottom_up.res4.17.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.17.conv3.weight[0m
  [35mbackbone.bottom_up.res4.17.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.18.conv1.weight[0m
  [35mbackbone.bottom_up.res4.18.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.18.conv2.weight[0m
  [35mbackbone.bottom_up.res4.18.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.18.conv3.weight[0m
  [35mbackbone.bottom_up.res4.18.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.19.conv1.weight[0m
  [35mbackbone.bottom_up.res4.19.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.19.conv2.weight[0m
  [35mbackbone.bottom_up.res4.19.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.19.conv3.weight[0m
  [35mbackbone.bottom_up.res4.19.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.20.conv1.weight[0m
  [35mbackbone.bottom_up.res4.20.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.20.conv2.weight[0m
  [35mbackbone.bottom_up.res4.20.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.20.conv3.weight[0m
  [35mbackbone.bottom_up.res4.20.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.21.conv1.weight[0m
  [35mbackbone.bottom_up.res4.21.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.21.conv2.weight[0m
  [35mbackbone.bottom_up.res4.21.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.21.conv3.weight[0m
  [35mbackbone.bottom_up.res4.21.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.22.conv1.weight[0m
  [35mbackbone.bottom_up.res4.22.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.22.conv2.weight[0m
  [35mbackbone.bottom_up.res4.22.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res4.22.conv3.weight[0m
  [35mbackbone.bottom_up.res4.22.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [35mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.conv1.weight[0m
  [35mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.conv2.weight[0m
  [35mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.0.conv3.weight[0m
  [35mbackbone.bottom_up.res5.0.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.1.conv1.weight[0m
  [35mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.1.conv2.weight[0m
  [35mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.1.conv3.weight[0m
  [35mbackbone.bottom_up.res5.1.conv3.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.2.conv1.weight[0m
  [35mbackbone.bottom_up.res5.2.conv1.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.2.conv2.weight[0m
  [35mbackbone.bottom_up.res5.2.conv2.norm.{weight, bias, running_mean, running_var}[0m
  [35mbackbone.bottom_up.res5.2.conv3.weight[0m
  [35mbackbone.bottom_up.res5.2.conv3.norm.{weight, bias, running_mean, running_var}[0m
[11/30 12:56:06] d2.engine.train_loop INFO: Starting training from iteration 0
[11/30 12:56:10] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
